services:
  # --- Layanan API Anda ---
  tirtapp-api:
    image: darmawiguna/tirtapp-api:latest
    container_name: tirtapp-api-prod
    restart: always
    ports:
      - "127.0.0.1:8095:8080"
    env_file:
      - ./.env
    # [TAMBAHAN] Memberitahu service ini untuk menunggu database siap terlebih dahulu
    depends_on:
      mysql-db:
        condition: service_healthy

  # --- Layanan Database MySQL ---
  mysql-db:
    image: mysql:8.0
    container_name: tirtapp-mysql-db
    restart: always
    environment:
      # Variabel ini akan digunakan oleh image MySQL untuk setup awal
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # Ambil dari file .env
      MYSQL_DATABASE: ${DB_NAME} # Ambil dari file .env
      MYSQL_USER: ${DB_USER} # Ambil dari file .env
      MYSQL_PASSWORD: ${DB_PASSWORD} # Ambil dari file .env
    ports:
      # (Opsional) Membuka port database ke VPS untuk diakses dari luar kontainer (misal: via DBeaver)
      - "3311:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
    volumes:
      # Menyimpan data MySQL secara permanen di volume Docker
      - db-data:/var/lib/mysql

# --- Volume untuk persistensi data ---
# Mendefinisikan volume yang akan digunakan oleh layanan di atas
volumes:
  db-data:
